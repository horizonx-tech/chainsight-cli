use sample_algorithm_lens_accessors :: * ; # [derive (Clone , Debug , Default , candid :: CandidType , serde :: Deserialize , serde :: Serialize)] pub struct LensValue { pub dummy : u64 } # [derive (Clone , Debug , Default , candid :: CandidType , serde :: Deserialize , serde :: Serialize)] pub struct CalculateArgs { pub dummy : u64 } pub async fn calculate (targets : Vec < String > , args : CalculateArgs) -> LensValue { let _result = get_get_last_snapshot_in_sample_snapshot_indexer_icp (targets . get (0usize) . unwrap () . clone ()) . await ; todo ! () }