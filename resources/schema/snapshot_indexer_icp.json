{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "$id": "https://raw.githubusercontent.com/horizonx-tech/chainsight-cli/main/resources/schema/snapshot_indexer.json",
  "title": "Chainsight ICP Snapshot Indexer specification",
  "$comment": "Chainsight ICP Snapshot Indexer specification",
  "description": "Chainsight ICP Snapshot Indexer specification",
  "type": "object",
  "required": ["version", "metadata", "datasource", "interval"],
  "additionalProperties": false,
  "properties": {
    "version": {
      "$id": "#/properties/version",
      "type": "string",
      "title": "specification version of the canister",
      "examples": ["v1"],
      "pattern": "^(v1)$"
    },
    "metadata": {
      "$id": "#/properties/metadata",
      "title": "metadata",
      "$comment": "metadata for the canister",
      "type": "object",
      "required": ["label", "type"],
      "additionalProperties": false,
      "properties": {
        "label": {
          "$id": "#/properties/metadata/properties/label",
          "type": "string",
          "title": "label for the canister",
          "examples": ["relayer_ethusd"]
        },
        "type": {
          "$id": "#/properties/metadata/properties/type",
          "type": "string",
          "title": "type of the canister",
          "examples": [
            "event_indexer",
            "algorithm_indexer",
            "snapshot_indexer_icp",
            "snapshot_indexer_evm",
            "snapshot_indexer_https",
            "relayer",
            "algorithm_lens"
          ],
          "pattern": "^(event_indexer|algorithm_indexer|snapshot_indexer_icp|snapshot_indexer_evm|snapshot_indexer_https|relayer|algorithm_lens)$"
        },
        "description": {
          "$id": "#/properties/metadata/properties/description",
          "type": "string",
          "title": "description of the canister",
          "description": "Can be used to filter canisters in the UI",
          "examples": ["Relayer for ETHUSD"]
        },
        "tags": {
          "$id": "#/properties/metadata/properties/tags",
          "type": "array",
          "title": "tags for the canister",
          "description": "Can be used to filter canisters in the UI",
          "items": {
            "$id": "#/properties/metadata/properties/tags/items",
            "type": "string",
            "examples": ["Ethereum", "Relayer", "Account"],
            "pattern": "^[a-zA-Z0-9_-]+$"
          }
        }
      }
    },
    "datasource": {
      "type": "object",
      "$id": "#/properties/datasource",
      "required": ["location", "method"],
      "additionalProperties": false,
      "properties": {
        "location": {
          "$id": "#/properties/datasource/properties/location",
          "type": "object",
          "title": "location of the datasource",
          "description": "location of the datasource. For contract, it is the contract address. For canister, it is the canister id or canister name defined in dfx.json.",
          "required": ["id"],
          "additionalProperties": false,
          "properties": {
            "id": {
              "$id": "#/properties/datasource/properties/location/properties/id",
              "type": "string",
              "title": "id of the datasource",
              "description": "id of the datasource. For contract, it is the contract address. For canister, it is the canister id or canister name defined in dfx.json.",
              "examples": [
                "9fE46736679d2D9a65F0992F2272dE9f3c7fa6e0",
                "0x9fE46736679d2D9a65F0992F2272dE9f3c7fa6e0",
                "pj_snapshot_indexer_icp",
                "rrkah-fqaaa-aaaaa-aaaaq-cai"
              ]
            }
          }
        },
        "method": {
          "$id": "#/properties/datasource/properties/method",
          "title": "method",
          "description": "method of the datasource. The canister will call this method to get data.",
          "type": "object",
          "required": ["identifier"],
          "additionalProperties": false,
          "properties": {
            "identifier": {
              "$id": "#/properties/datasource/properties/method/properties/identifier",
              "type": "string",
              "title": "identifier of the method",
              "description": "contract of candid function and its return values to call.",
              "examples": [
                "latestAnswer():(uint256)",
                "balanceOf(address):(uint256)",
                "get_last_snapshot : () -> (record { value : text; timestamp : nat64 })"
              ]
            },
            "interface": {
              "$id": "#/properties/datasource/properties/method/properties/interface",
              "type": ["string", "null"],
              "title": "interface",
              "description": "abi json file to use. This file must be in ./interfaces folder. It is required if type is contract.",
              "examples": ["AggregatorV3Interface.json", "IERC20.json"]
            },
            "args": {
              "$id": "#/properties/datasource/properties/method/properties/args",
              "type": "array",
              "title": "args",
              "description": "args for the method",
              "examples": [1, "0x9fE46736679d2D9a65F0992F2272dE9f3c7fa6e0"]
            }
          }
        }
      }
    },
    "lens_targets": {
      "$id": "#/properties/lens_targets",
      "type": ["object", "null"],
      "title": "lens targets",
      "description": "targets for the lens. Only used when the datasource canister is a algorithm_lens",
      "required": ["identifiers"],
      "additionalProperties": false,
      "properties": {
        "identifiers": {
          "$id": "#/properties/lens_targets/properties/identifiers",
          "type": "array",
          "title": "identifiers",
          "description": "canister ids of the lens targets. If the canister calls an algorithm_lens and the lens calls 3 canisters, you must set 3 canister ids here",
          "examples": [
            [
              "bw4dl-smaaa-aaaaa-qaacq-cai",
              "bw4dl-smaaa-aaaaa-qaacq-cai",
              "bw4dl-smaaa-aaaaa-qaacq-cai"
            ],
            ["bw4dl-smaaa-aaaaa-qaacq-cai"]
          ],
          "items": {
            "$id": "#/properties/lens_targets/properties/identifiers/items",
            "type": "string",
            "examples": ["bw4dl-smaaa-aaaaa-qaacq-cai"],
            "pattern": "^[a-z0-9_-]+$"
          }
        }
      }
    },
    "interval": {
      "$id": "#/properties/interval",
      "title": "interval",
      "description": "interval of the canister invocation in seconds",
      "type": "number",
      "examples": [60]
    },
    "cycles": {
      "$id": "#/properties/cycles",
      "title": "cycles",
      "description": "manage component cycles",
      "type": ["object", "null"],
      "properties": {
        "refueling_interval": {
          "$id": "#/properties/cycles/refueling_interval",
          "title": "refueling_interval",
          "description": "interval of the refueling to canisters in seconds",
          "type": ["number", "null"],
          "examples": [86400]
        },
        "vault_intial_supply": {
          "$id": "#/properties/cycles/vault_intial_supply",
          "title": "vault_intial_supply",
          "description": "initial supply cycles to the vault canister",
          "type": ["number", "null"],
          "examples": [3000000000000]
        },
        "indexer": {
          "$id": "#/properties/cycles/indexer",
          "title": "indexer",
          "description": "cycles setting of indexer canister",
          "type": ["object", "null"],
          "properties": {
            "initial_supply": {
              "$id": "#/properties/cycles/indexer/initial_supply",
              "title": "initial_supply",
              "description": "initial supply cycles to the indexer canister",
              "type": ["number", "null"],
              "examples": [1000000000000]
            },
            "refueling_threshold": {
              "$id": "#/properties/cycles/indexer/refueling_threshold",
              "title": "refueling_threshold",
              "description": "vault refuel cycles to the canister when the cycles balance is below this value",
              "type": ["number", "null"],
              "examples": [500000000000]
            },
            "refueling_amount": {
              "$id": "#/properties/cycles/indexer/refueling_amount",
              "title": "refueling_amount",
              "description": "vault refuel cycles with this value to the canister when the cycles balance is below the refueling_threshold",
              "type": ["number", "null"],
              "examples": [1000000000000]
            }
          }
        },
        "db": {
          "$id": "#/properties/cycles/db",
          "title": "db",
          "description": "cycles setting of db canister",
          "type": ["object", "null"],
          "properties": {
            "initial_supply": {
              "$id": "#/properties/cycles/db/initial_supply",
              "title": "initial_supply",
              "description": "initial supply cycles to the db canister",
              "type": ["number", "null"],
              "examples": [150000000000]
            },
            "refueling_threshold": {
              "$id": "#/properties/cycles/db/refueling_threshold",
              "title": "refueling_threshold",
              "description": "vault refuel cycles to the canister when the cycles balance is below this value",
              "type": ["number", "null"],
              "examples": [1000000000000]
            },
            "refueling_amount": {
              "$id": "#/properties/cycles/db/refueling_amount",
              "title": "refueling_amount",
              "description": "vault refuel cycles with this value to the canister when the cycles balance is below the refueling_threshold",
              "type": ["number", "null"],
              "examples": [1000000000000]
            }
          }
        },
        "proxy": {
          "$id": "#/properties/cycles/proxy",
          "title": "proxy",
          "description": "cycles setting of proxy canister",
          "type": ["object", "null"],
          "properties": {
            "initial_supply": {
              "$id": "#/properties/cycles/proxy/initial_supply",
              "title": "initial_supply",
              "description": "initial supply cycles to the proxy canister",
              "type": ["number", "null"],
              "examples": [300000000000]
            },
            "refueling_threshold": {
              "$id": "#/properties/cycles/proxy/refueling_threshold",
              "title": "refueling_threshold",
              "description": "vault refuel cycles to the canister when the cycles balance is below this value",
              "type": ["number", "null"],
              "examples": [100000000000]
            },
            "refueling_amount": {
              "$id": "#/properties/cycles/proxy/refueling_amount",
              "title": "refueling_amount",
              "description": "vault refuel cycles with this value to the canister when the cycles balance is below the refueling_threshold",
              "type": ["number", "null"],
              "examples": [1000000000000]
            }
          }
        }
      }
    }
  }
}
