{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "description": "Chainsight algorithm lens config",
  "type": "object",
  "required": ["version", "metadata", "datasource", "output"],
  "properties": {
    "version": {
      "type": "string",
      "title": "specification version of the canister",
      "examples": ["v1"],
      "pattern": "^(v1)$"
    },
    "metadata": {
      "$comment": "metadata for the canister",
      "type": "object",
      "required": ["label", "type"],
      "properties": {
        "label": {
          "type": "string",
          "title": "label for the canister",
          "examples": ["relayer_ethusd"],
          "pattern": "^[a-z0-9_]+$"
        },
        "type": {
          "type": "string",
          "title": "type of the canister",
          "examples": [
            "event_indexer",
            "algorithm_indexer",
            "snapshot_indexer",
            "snapshot_json_rpc",
            "relayer",
            "algorithm_lens"
          ],
          "pattern": "^(event_indexer|algorithm_indexer|snapshot_indexer|snapshot_json_rpc|relayer|algorithm_lens)$"
        },
        "description": {
          "type": "string",
          "title": "description of the canister",
          "description": "Can be used to filter canisters in the UI",
          "examples": ["Relayer for ETHUSD"]
        },
        "tags": {
          "type": "array",
          "title": "tags for the canister",
          "description": "Can be used to filter canisters in the UI",
          "items": {
            "type": "string",
            "examples": ["Ethereum", "Relayer", "Account"],
            "pattern": "^[a-zA-Z0-9_]+$"
          }
        }
      }
    },
    "datasource": {
      "type": "object",
      "required": ["methods"],
      "properties": {
        "methods": {
          "type": "array",
          "title": "methods",
          "description": "methods to call on the callee canisters",
          "items": {
            "type": "object",
            "title": "method",
            "description": "method to call on the callee canister",
            "required": ["label", "identifier", "candid_file_path"],
            "properties": {
              "label": {
                "title": "label",
                "description": "label of this method",
                "examples": [
                  "get_ethusd_price_from_coingecko",
                  "get_ethusd_price_from_chainlink"
                ],
                "type": "string",
                "pattern": "^[a-z0-9_]+$"
              },
              "identifier": {
                "title": "identifier",
                "description": "method identifier of the canister to call. You can find it in the candid file",
                "examples": ["get_last_snapshot_value : () -> (SnapshotValue)"],
                "type": "string"
              },
              "candid_file_path": {
                "title": "candid_file_path",
                "description": "path to the candid file of the canister to call",
                "examples": ["artifacts/chainlink/src/chainlink.did"],
                "type": "string"
              }
            }
          }
        }
      }
    },
    "output": {
      "title": "output",
      "description": "output of the algorithm lens",
      "type": "object",
      "required": ["type"],
      "dependencies": {
        "type": {
          "oneOf": [
            {
              "properties": {
                "type": {
                  "enum": ["primitive"]
                },
                "type_name": {
                  "type": "string"
                }
              },
              "required": ["type_name"]
            },
            {
              "properties": {
                "type": {
                  "enum": ["struct"]
                },
                "name": {
                  "type": "string"
                },
                "fields": {
                  "type": "object"
                }
              },
              "required": ["name", "fields"]
            }
          ]
        }
      },
      "properties": {
        "type": {
          "title": "type",
          "description": "type of the output. You can use primitive type of Rust or User defined struct",
          "examples": ["primitive", "struct"],
          "type": "string",
          "pattern": "^(primitive|struct)$"
        },
        "type_name": {
          "title": "type_name",
          "description": "primitive type name. Required if 'output.type' is 'primitive'",
          "examples": ["u128", "String", "bool"],
          "type": "string"
        },
        "name": {
          "title": "name",
          "description": "name of the output struct. Required if 'output.type' is 'struct'",
          "examples": ["ETHUSDPrice"],
          "type": "string",
          "pattern": "^[a-zA-Z0-9_]+$"
        },
        "fields": {
          "title": "fields",
          "description": "set of field names and their Rust types. Required if 'output.type' is 'struct'",
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "examples": ["u128", "String", "bool"]
          }
        }
      }
    }
  }
}
