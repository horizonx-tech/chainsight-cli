{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "$id": "https://raw.githubusercontent.com/horizonx-tech/chainsight-cli/main/resources/schema/algorithm_indexer.json",
  "title": "Chainsight Event Indexer specification",
  "$comment": "Chainsight Event Indexer specification",
  "description": "Chainsight Algorithm Indexer specification",
  "type": "object",
  "required": ["version", "metadata", "datasource", "output", "timer_settings"],
  "additionalProperties": false,
  "properties": {
    "version": {
      "$id": "#/properties/version",
      "type": "string",
      "title": "specification version of the canister",
      "examples": ["v1"],
      "pattern": "^(v1)$"
    },
    "metadata": {
      "$id": "#/properties/metadata",
      "$comment": "metadata for the canister",
      "title": "metadata for the canister",
      "type": "object",
      "required": ["label", "type"],
      "additionalProperties": false,
      "properties": {
        "label": {
          "$id": "#/properties/metadata/properties/label",
          "type": "string",
          "title": "label for the canister",
          "examples": ["relayer_ethusd"]
        },
        "type": {
          "$id": "#/properties/metadata/properties/type",
          "type": "string",
          "title": "type of the canister",
          "examples": [
            "event_indexer",
            "algorithm_indexer",
            "snapshot_indexer_icp",
            "snapshot_indexer_evm",
            "snapshot_indexer_https",
            "relayer",
            "algorithm_lens"
          ],
          "pattern": "^(event_indexer|algorithm_indexer|snapshot_indexer_icp|snapshot_indexer_evm|snapshot_indexer_https|relayer|algorithm_lens)$"
        },
        "description": {
          "$id": "#/properties/metadata/properties/description",
          "type": "string",
          "title": "description of the canister",
          "description": "Can be used to filter canisters in the UI",
          "examples": ["Relayer for ETHUSD"]
        },
        "tags": {
          "$id": "#/properties/metadata/properties/tags",
          "type": "array",
          "title": "tags for the canister",
          "description": "Can be used to filter canisters in the UI",
          "items": {
            "$id": "#/properties/metadata/properties/tags/items",
            "type": "string",
            "examples": ["Ethereum", "Relayer", "Account"],
            "pattern": "^[a-zA-Z0-9_-]+$"
          }
        }
      }
    },
    "datasource": {
      "$id": "#/properties/datasource",
      "type": "object",
      "title": "datasource",
      "required": ["principal", "input", "method", "from", "source_type"],
      "additionalProperties": false,
      "properties": {
        "principal": {
          "$id": "#/properties/datasource/properties/principal",
          "title": "principal",
          "description": "principal of the source canister",
          "type": "string",
          "examples": [
            "rrkah-fqaaa-aaaaa-aaaaq-cai",
            "bw4dl-smaaa-aaaaa-qaacq-cai"
          ]
        },
        "input": {
          "$id": "#/properties/datasource/properties/input",
          "title": "input",
          "description": "struct retrived from the source canister",
          "type": "object",
          "required": ["name", "fields"],
          "additionalProperties": false,
          "properties": {
            "name": {
              "$id": "#/properties/datasource/properties/input/properties/name",
              "type": "string",
              "title": "name of the struct",
              "examples": ["Relayer"],
              "pattern": "^[a-zA-Z0-9_-]+$"
            },
            "fields": {
              "$id": "#/properties/datasource/properties/input/properties/fields",
              "title": "fields",
              "description": "field names and rust types of the struct",
              "type": ["object", "null"],
              "additionalProperties": {
                "type": "string",
                "title": "rust type of the field",
                "examples": ["String", "u128", "chainsight_cdk::core::U256"],
                "pattern": "^[a-zA-Z0-9_<>:]+$"
              }
            }
          }
        },
        "from": {
          "$id": "#/properties/datasource/properties/from",
          "title": "from",
          "description": "key to start the query from",
          "type": "number",
          "examples": [0]
        },
        "method": {
          "$id": "#/properties/datasource/properties/method",
          "title": "method",
          "description": "method to query the canister",
          "type": "string",
          "examples": ["get_balance", "get_result"]
        },
        "source_type": {
          "$id": "#/properties/datasource/properties/source_type",
          "title": "source_type",
          "description": "type of the source canister",
          "type": "string",
          "examples": ["event_indexer", "key_value", "key_values"],
          "pattern": "^(event_indexer|key_value|key_values)$"
        },
        "batch_size": {
          "$id": "#/properties/datasource/properties/batch_size",
          "title": "batch_size",
          "description": "number of records to save in a single transaction",
          "type": ["number", "null"],
          "examples": [500]
        }
      }
    },
    "output": {
      "$id": "#/properties/output",
      "title": "output",
      "description": "array of output struct name and fields",
      "type": "array",
      "items": {
        "$id": "#/properties/output/items",
        "type": "object",
        "title": "output struct",
        "required": ["name", "fields", "output_type"],
        "additionalProperties": false,
        "properties": {
          "name": {
            "$id": "#/properties/output/items/properties/name",
            "type": "string",
            "title": "name of the struct",
            "examples": ["AccountBalance"],
            "pattern": "^[a-zA-Z0-9_-]+$"
          },
          "fields": {
            "$id": "#/properties/output/items/properties/fields",
            "title": "fields",
            "description": "field names and rust types of the struct",
            "type": ["object", "null"],
            "additionalProperties": {
              "type": "string",
              "title": "rust type of the field",
              "examples": ["String", "u128"],
              "pattern": "^[a-zA-Z0-9_<>]+$"
            }
          },
          "output_type": {
            "$id": "#/properties/output/items/properties/output_type",
            "title": "output_type",
            "description": "type of the output. KeyValues: HashMap<Key, Vec<Values>>, KeyValue: HashMap<Key, Value>",
            "type": "string",
            "examples": ["key_values", "key_value"],
            "pattern": "^(key_values|key_value)$"
          }
        }
      }
    },
    "timer_settings": {
      "$id": "#/properties/timer_settings",
      "title": "timer_settings",
      "description": "timer execution settings",
      "type": "object",
      "required": ["interval_sec"],
      "additionalProperties": false,
      "properties": {
        "interval_sec": {
          "$id": "#/properties/timer_settings/properties/interval_sec",
          "title": "interval_sec",
          "description": "interval of the canister invocation in seconds",
          "type": "number",
          "examples": [3600]
        },
        "delay_sec": {
          "$id": "#/properties/timer_settings/properties/delay_sec",
          "title": "delay_sec",
          "description": "delay of the canister invocation in seconds",
          "type": ["number", "null"],
          "examples": [60]
        }
      }
    },
    "cycles": {
      "$id": "#/properties/cycles",
      "title": "cycles",
      "description": "manage component cycles",
      "type": ["object", "null"],
      "properties": {
        "refueling_interval": {
          "$id": "#/properties/cycles/refueling_interval",
          "title": "refueling_interval",
          "description": "interval of the refueling to canisters in seconds",
          "type": ["number", "null"],
          "examples": [86400]
        },
        "vault_intial_supply": {
          "$id": "#/properties/cycles/vault_intial_supply",
          "title": "vault_intial_supply",
          "description": "initial supply cycles to the vault canister",
          "type": ["number", "null"],
          "examples": [3000000000000]
        },
        "indexer": {
          "$id": "#/properties/cycles/indexer",
          "title": "indexer",
          "description": "cycles setting of indexer canister",
          "type": ["object", "null"],
          "properties": {
            "initial_supply": {
              "$id": "#/properties/cycles/indexer/initial_supply",
              "title": "initial_supply",
              "description": "initial supply cycles to the indexer canister",
              "type": ["number", "null"],
              "examples": [1000000000000]
            },
            "refueling_threshold": {
              "$id": "#/properties/cycles/indexer/refueling_threshold",
              "title": "refueling_threshold",
              "description": "vault refuel cycles to the canister when the cycles balance is below this value",
              "type": ["number", "null"],
              "examples": [500000000000]
            },
            "refueling_amount": {
              "$id": "#/properties/cycles/indexer/refueling_amount",
              "title": "refueling_amount",
              "description": "vault refuel cycles with this value to the canister when the cycles balance is below the refueling_threshold",
              "type": ["number", "null"],
              "examples": [1000000000000]
            }
          }
        },
        "db": {
          "$id": "#/properties/cycles/db",
          "title": "db",
          "description": "cycles setting of db canister",
          "type": ["object", "null"],
          "properties": {
            "initial_supply": {
              "$id": "#/properties/cycles/db/initial_supply",
              "title": "initial_supply",
              "description": "initial supply cycles to the db canister",
              "type": ["number", "null"],
              "examples": [150000000000]
            },
            "refueling_threshold": {
              "$id": "#/properties/cycles/db/refueling_threshold",
              "title": "refueling_threshold",
              "description": "vault refuel cycles to the canister when the cycles balance is below this value",
              "type": ["number", "null"],
              "examples": [1000000000000]
            },
            "refueling_amount": {
              "$id": "#/properties/cycles/db/refueling_amount",
              "title": "refueling_amount",
              "description": "vault refuel cycles with this value to the canister when the cycles balance is below the refueling_threshold",
              "type": ["number", "null"],
              "examples": [1000000000000]
            }
          }
        },
        "proxy": {
          "$id": "#/properties/cycles/proxy",
          "title": "proxy",
          "description": "cycles setting of proxy canister",
          "type": ["object", "null"],
          "properties": {
            "initial_supply": {
              "$id": "#/properties/cycles/proxy/initial_supply",
              "title": "initial_supply",
              "description": "initial supply cycles to the proxy canister",
              "type": ["number", "null"],
              "examples": [300000000000]
            },
            "refueling_threshold": {
              "$id": "#/properties/cycles/proxy/refueling_threshold",
              "title": "refueling_threshold",
              "description": "vault refuel cycles to the canister when the cycles balance is below this value",
              "type": ["number", "null"],
              "examples": [100000000000]
            },
            "refueling_amount": {
              "$id": "#/properties/cycles/proxy/refueling_amount",
              "title": "refueling_amount",
              "description": "vault refuel cycles with this value to the canister when the cycles balance is below the refueling_threshold",
              "type": ["number", "null"],
              "examples": [1000000000000]
            }
          }
        }
      }
    }
  }
}
