---
source: src/commands/tests/mod.rs
expression: "format!(\"{:#?}\", &metadata)"
---
[
    (
        "candid:service",
        "type CycleManagement = record {\n  refueling_amount : nat;\n  initial_supply : nat;\n  refueling_threshold : nat;\n};\ntype CycleManagements = record {\n  db : CycleManagement;\n  vault_intial_supply : nat;\n  refueling_interval : nat64;\n  proxy : CycleManagement;\n  indexer : CycleManagement;\n};\ntype Env = variant { Production; Test; LocalDevelopment };\ntype ICSnapshotIndexerSourceAttrs = record {\n  function_name : text;\n  sources : vec text;\n};\ntype InitError = variant {\n  InvalidDestination : text;\n  InvalidPrincipal : principal;\n  InvalidContent : text;\n  InvalidRequest : text;\n};\ntype ResponseType = record { value : text; timestamp : nat64 };\ntype Result = variant { Ok; Err : InitError };\ntype Result_1 = variant { Ok; Err : text };\ntype Snapshot = record { value : ResponseType; timestamp : nat64 };\ntype SourceType = variant { evm; https; chainsight };\ntype Sources = record {\n  source : text;\n  interval_sec : opt nat32;\n  attributes : ICSnapshotIndexerSourceAttrs;\n  source_type : SourceType;\n};\nservice : {\n  call_args : () -> (null) query;\n  get_last_snapshot : () -> (Snapshot) query;\n  get_last_snapshot_value : () -> (ResponseType) query;\n  get_proxy : () -> (principal);\n  get_snapshot : (nat64) -> (Snapshot) query;\n  get_snapshot_value : (nat64) -> (ResponseType) query;\n  get_snapshots : () -> (vec Snapshot) query;\n  get_sources : () -> (vec Sources) query;\n  get_top_snapshot_values : (nat64) -> (vec ResponseType) query;\n  get_top_snapshots : (nat64) -> (vec Snapshot) query;\n  index : () -> ();\n  init_in : (Env, CycleManagements) -> (Result);\n  proxy_get_last_snapshot : (blob) -> (blob);\n  proxy_get_last_snapshot_value : (blob) -> (blob);\n  proxy_get_snapshot : (blob) -> (blob);\n  proxy_get_snapshot_value : (blob) -> (blob);\n  proxy_get_snapshots : (blob) -> (blob);\n  proxy_get_top_snapshot_values : (blob) -> (blob);\n  proxy_get_top_snapshots : (blob) -> (blob);\n  proxy_snapshots_len : (blob) -> (blob);\n  set_task : (nat32, nat32, bool) -> ();\n  setup : (text) -> (Result_1);\n  snapshots_len : () -> (nat64) query;\n}",
    ),
    (
        "chainsight:component_type",
        "snapshot_indexer_icp",
    ),
    (
        "chainsight:description",
        "",
    ),
    (
        "chainsight:intervalSec",
        "3600",
    ),
    (
        "chainsight:label",
        "Sample Snapshot Indexer Icp",
    ),
    (
        "chainsight:sources",
        "[{\"source_type\":\"chainsight\",\"source\":\"sample_snapshot_indexer_evm\",\"attributes\":{\"function_name\":\"get_last_snapshot\"}}]",
    ),
    (
        "chainsight:tags",
        "[\"ERC-20\",\"Ethereum\",\"DAI\"]",
    ),
]
