---
source: src/commands/tests/mod.rs
expression: "fs::read_to_string(&did_path).unwrap()"
---
type CanisterMetricsSnapshot = record { cycles : nat; timestamp : nat64 };
type Env = variant { Production; Test; LocalDevelopment };
type InitError = variant {
  InvalidDestination : text;
  InvalidPrincipal : principal;
  InvalidContent : text;
  InvalidRequest : text;
};
type LensValue = record { dummy : nat64 };
type Result = variant { Ok; Err : InitError };
type SourceType = variant { evm; https; chainsight };
type Sources = record {
  source : text;
  interval_sec : opt nat32;
  attributes : vec record { text; text };
  source_type : SourceType;
};
service : {
  get_proxy : () -> (principal);
  get_result : (vec text) -> (LensValue);
  get_sources : () -> (vec Sources) query;
  init_in : (Env) -> (Result);
  metric : () -> (CanisterMetricsSnapshot) query;
  metrics : (nat64) -> (vec CanisterMetricsSnapshot) query;
  proxy_canister_metrics_snapshots_len : (vec nat8) -> (vec nat8);
  proxy_get_canister_metrics_snapshot : (vec nat8) -> (vec nat8);
  proxy_get_canister_metrics_snapshots : (vec nat8) -> (vec nat8);
  proxy_get_last_canister_metrics_snapshot : (vec nat8) -> (vec nat8);
  proxy_get_result : (vec nat8) -> (vec nat8);
  proxy_get_top_canister_metrics_snapshots : (vec nat8) -> (vec nat8);
}
