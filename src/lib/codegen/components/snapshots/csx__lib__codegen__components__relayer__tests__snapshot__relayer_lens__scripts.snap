---
source: src/lib/codegen/components/relayer.rs
expression: "&manifest.generate_scripts(Network::Local).unwrap()"
---
#!/bin/bash
# init
dfx canister  call sample_relayer init_in '(variant { "LocalDevelopment" }, record {
                refueling_interval = 86400: nat64;
                vault_intial_supply = 1000000000000: nat;
                indexer = record { 
                    initial_value = 0: nat;
                    refueling_value = 1000000000000: nat;
                    refueling_threshold = 500000000000: nat;
                };
                db = record { 
                    initial_value = 2000000000000: nat;
                    refueling_value = 100000000000: nat;
                    refueling_threshold = 1000000000000: nat;
                };
                proxy = record { 
                    initial_value = 2000000000: nat;
                    refueling_value = 1000000000: nat;
                    refueling_threshold = 1000000000: nat;
                };
        })' --with-cycles 3002000000000 --wallet $(dfx identity get-wallet )
# setup
dfx canister  call sample_relayer setup "(
    \"0x0539a0EF8e5E60891fFf0958A059E049e43020d9\",
    record {
        url = \"https://polygon-mumbai.infura.io/v3/${INFURA_MUMBAI_RPC_URL_KEY}\";
        from = null;
        chain_id = 80001;
        env = variant { LocalDevelopment };
    },
    \"$(dfx canister  id datasource_canister_id)\",
    vec { \"$(dfx canister  id lens_target_canister_1)\"; \"$(dfx canister  id lens_target_canister_2)\" },
)"
# set_task
dfx canister  call sample_relayer set_task '(3600, 10)'

